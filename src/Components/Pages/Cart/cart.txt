import { useDispatch, useSelector } from 'react-redux';
import { clearCart } from '../../../redux/slices/CartSlice';
import { useState } from 'react';
import { useNavigate } from 'react-router-dom'; 
import './Cart.css';

const CartPage = () => {
  const dispatch = useDispatch();
  const navigate = useNavigate(); 
  const cart = useSelector(state => state.cart); // Redux cart state

  // Local state for promo code and discount
  const [promoCode, setPromoCode] = useState('');
  const [discount, setDiscount] = useState(0);

  // Valid promo codes
  const validPromoCodes = { 'SAVE10': 10, 'SAVE20': 20 };

  // Apply promo code and set discount
  const handleApplyPromoCode = () => {
    if (validPromoCodes[promoCode]) {
      setDiscount(validPromoCodes[promoCode]);
    } else {
      setDiscount(0);
      alert('Invalid promo code');
    }
  };

  // Calculate total with discount
  const getTotalWithDiscount = () => {
    const total = cart.items.reduce((acc, item) => acc + (item.price * item.quantity), 0);
    return total - (total * (discount / 100));
  };

  // Clear the cart
  const handleClearCart = () => {
    dispatch(clearCart());
  };

  // Debugging output
  console.log('Redux Cart:', cart);

  return (
    <div className="cart">
      <div className='cart-items'>
        <div className="cart-item-title">
          <p>Title</p>
          <p>Price</p>
          <p>Quantity</p>
          <p>Total</p>
          <p>Remove</p>
        </div>
        <br />
        <hr />
        {cart.items.length > 0 ? (
          cart.items.map((item) => (
            <div key={item.id}>
              <div className="cart-item-title cart-items-item">
                <p>{item.name}</p>
                <img src={item.image} alt={item.name} />
                <p>${item.price.toFixed(2)}</p>
                <p>{item.quantity}</p>
                <p>${(item.price * item.quantity).toFixed(2)}</p>
                <button onClick={() => dispatch(removeFromCart(item.id))}>X</button>              
              </div>
              <hr />
            </div>
          ))
        ) : (
          <p>Your cart is empty.</p>
        )}
        <hr />
        <div className="cart-bottom">
          <div className="cart-total">
            <h2>Cart Total</h2>
            <div>
              <div className="cart-total-details">
                <p>Subtotal</p>
                <p>${cart.items.reduce((acc, item) => acc + (item.price * item.quantity), 0).toFixed(2)}</p>
              </div>
              <div className="cart-total-details">
                <p>Delivery Fee</p>
                <p>${2}</p>
              </div>
              <div className="cart-total-details">
                <b>Total</b>
                <b>${getTotalWithDiscount() + 2}</b>
              </div>
              <button onClick={() => navigate('/placeOrder')}>PROCEED TO CHECKOUT</button>
            </div>
            <div className="cart-promocode">
              <div>
                <p>If you have a promo code, enter it here</p>
                <div className="cart-promocode-input">
                  <input 
                    type="text" 
                    placeholder='promo code' 
                    value={promoCode} 
                    onChange={(e) => setPromoCode(e.target.value)} 
                  />
                  <button onClick={handleApplyPromoCode}>Submit</button>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div className="cart-summary">
          <p>Total Quantity: {cart.items.reduce((acc, item) => acc + item.quantity, 0)}</p>
          <p>Total Price: ${getTotalWithDiscount().toFixed(2)}</p>
          <button onClick={handleClearCart}>Clear Cart</button>
        </div>
      </div>
    </div>
  );
};

export default CartPage;
/ import { useDispatch, useSelector } from 'react-redux';
// import { clearCart, removeItem } from '../../../redux/slices/cartSlice';
// import { useState } from 'react';
// import { useNavigate } from 'react-router-dom'; 
// import './Cart.css';

// const CartPage = () => {
//   const dispatch = useDispatch();
//   const navigate = useNavigate(); 
//   const cart = useSelector(state => state.cart); 

//   const [promoCode, setPromoCode] = useState('');
//   const [discount, setDiscount] = useState(0);

//   const validPromoCodes = { 'SAVE10': 10, 'SAVE20': 20 };

//   const handleApplyPromoCode = () => {
//     if (validPromoCodes[promoCode]) {
//       setDiscount(validPromoCodes[promoCode]);
//     } else {
//       setDiscount(0);
//       alert('Invalid promo code');
//     }
//   };

//   const getTotalWithDiscount = () => {
//     const total = cart.items.reduce((acc, item) => acc + (item.price * item.quantity), 0);
//     return total - (total * (discount / 100));
//   };

//   const handleClearCart = () => {
//     dispatch(clearCart());
//   };

//   const handleRemoveItem = (id) => {
//     dispatch(removeItem(id));
//   };

//   console.log('Redux Cart:', cart); // Check console log for cart state

//   return (
//     <div className="cart">
//       <div className='cart-items'>
//         <div className="cart-item-title">
//           <p>Title</p>
//           <p>Price</p>
//           <p>Quantity</p>
//           <p>Total</p>
//           <p>Remove</p>
//         </div>
//         <br />
//         <hr />
//         {cart.items.length > 0 ? (
//           cart.items.map((item) => (
//             <div key={item.id}>
//               <div className="cart-item-title cart-items-item">
//                 <p>{item.name}</p>
//                 <img src={item.image} alt={item.name} />
//                 <p>${item.price.toFixed(2)}</p>
//                 <p>{item.quantity}</p>
//                 <p>${(item.price * item.quantity).toFixed(2)}</p>
//                 <button onClick={() => handleRemoveItem(item.id)}>X</button>              
//               </div>
//               <hr />
//             </div>
//           ))
//         ) : (
//           <p>Your cart is empty.</p>
//         )}
//         <hr />
//         <div className="cart-bottom">
//           <div className="cart-total">
//             <h2>Cart Total</h2>
//             <div className="cart-total-details">
//               <p>Subtotal</p>
//               <p>${cart.items.reduce((acc, item) => acc + (item.price * item.quantity), 0).toFixed(2)}</p>
//             </div>
//             <div className="cart-total-details">
//               <p>Delivery Fee</p>
//               <p>${2}</p>
//             </div>
//             <div className="cart-total-details">
//               <b>Total</b>
//               <p>${(getTotalWithDiscount() + 2).toFixed(2)}</p>
//             </div>
//             <button onClick={() => navigate('/placeOrder')}>PROCEED TO CHECKOUT</button>
//           </div>
//           <div className="cart-promocode">
//             <p>If you have a promo code, enter it here</p>
//             <div className="cart-promocode-input">
//               <input 
//                 type="text" 
//                 placeholder='Promo code' 
//                 value={promoCode} 
//                 onChange={(e) => setPromoCode(e.target.value)} 
//               />
//               <button onClick={handleApplyPromoCode}>Submit</button>
//             </div>
//           </div>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default CartPage;

